name: CI-CD
permissions:
  contents: write
  pull-requests: write
on:
  push:
    branches: [master]
    paths:
      - 'libs/**'
  workflow_dispatch:

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  SKIP_SIMPLE_GIT_HOOKS: 1

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.1-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5431:5432
    steps:
      - uses: actions/checkout@v4
      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - name: install
        run: pnpm install 
      - name: unit test
        run: pnpm test
      - name: coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  cd:
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib: [act, act-pg]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - name: install
        run: pnpm install
      - name: analyze ${{ matrix.lib }}
        id: analyze
        uses: rotorsoft/semrel-analyze@v3.0.0
        with:
          package: "@rotorsoft/${{ matrix.lib }}"
          directory: "libs/${{ matrix.lib }}"
      - name: analysis
        run: |
          echo "last-tag: ${{ steps.analyze.outputs.last-tag }}"
          echo "next-tag: ${{ steps.analyze.outputs.next-tag }}"
          echo "next-version: ${{ steps.analyze.outputs.next-version }}"
          echo "${{ steps.analyze.outputs.change-log }}"
      - name: skip if no release needed
        if: steps.analyze.outputs.next-tag == '-' || steps.analyze.outputs.next-version == '-'
        run: |
          echo "No release needed for ${{ matrix.lib }}. Skipping."
          exit 0
      - name: check github token permissions
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}
      - name: build
        run: pnpm build
      - name: release ${{ matrix.lib }}
        uses: rotorsoft/semrel-release@v3.0.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          npm-registry: "registry.npmjs.org"
          npm-token: "${{ secrets.NPM_TOKEN }}"
          npm-access: "public"
          user: "rotorsoft"
          email: "rotorsoft@outlook.com"
          package: "@rotorsoft/${{ matrix.lib }}"
          directory: "libs/${{ matrix.lib }}"
          tag: "${{ steps.analyze.outputs.next-tag }}"
          version: "${{ steps.analyze.outputs.next-version }}"
          change-log: "${{ steps.analyze.outputs.change-log }}"
