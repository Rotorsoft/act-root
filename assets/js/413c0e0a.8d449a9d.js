"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3856],{4318:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(4700);const c={},i=s.createContext(c);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},7270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/act.src.Function.state","title":"act.src.Function.state","description":"Act Framework Documentation v0.0.1","source":"@site/docs/api/act.src.Function.state.md","sourceDirName":"api","slug":"/api/act.src.Function.state","permalink":"/act-root/docs/docs/api/act.src.Function.state","draft":false,"unlisted":false,"editUrl":"https://github.com/rotorsoft/act-root/edit/master/docs/docs/api/act.src.Function.state.md","tags":[],"version":"current","frontMatter":{}}');var c=n(7968),i=n(4318);const r={},a=void 0,o={},d=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"S",id:"s",level:3},{value:"Parameters",id:"parameters",level:2},{value:"name",id:"name",level:3},{value:"state",id:"state",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/",children:(0,c.jsx)(t.strong,{children:"Act Framework Documentation v0.0.1"})})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/",children:"Act Framework Documentation"})," / ",(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/act.src",children:"act/src"})," / state"]}),"\n",(0,c.jsx)(t.h1,{id:"function-state",children:"Function: state()"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"state"}),"<",(0,c.jsx)(t.code,{children:"S"}),">(",(0,c.jsx)(t.code,{children:"name"}),", ",(0,c.jsx)(t.code,{children:"state"}),"): ",(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/act.src.TypeAlias.StateBuilder",children:(0,c.jsx)(t.code,{children:"StateBuilder"})}),"<",(0,c.jsx)(t.code,{children:"S"}),">"]}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["Defined in: ",(0,c.jsx)(t.a,{href:"https://github.com/Rotorsoft/act-root/blob/50753bf651a718d03244983b6fb97a3c250107b2/libs/act/src/state-builder.ts#L76",children:"libs/act/src/state-builder.ts:76"})]}),"\n",(0,c.jsx)(t.p,{children:"Fluent interface for defining a strongly-typed state machine using Zod schemas."}),"\n",(0,c.jsx)(t.p,{children:"This builder helps you model a system where:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:["You start by defining the state schema with ",(0,c.jsx)(t.code,{children:"state(name, zodSchema)"})]}),"\n",(0,c.jsxs)(t.li,{children:["Then, provide the initial state using ",(0,c.jsx)(t.code,{children:".init(() => defaultState)"})]}),"\n",(0,c.jsxs)(t.li,{children:["Declare the event types your system can emit using ",(0,c.jsx)(t.code,{children:".emits({ ... })"})]}),"\n",(0,c.jsxs)(t.li,{children:["Define how emitted events update state with ",(0,c.jsx)(t.code,{children:".patch({ ... })"})]}),"\n",(0,c.jsxs)(t.li,{children:["Define actions using ",(0,c.jsx)(t.code,{children:'.on("actionName", actionSchema)'}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:["Optionally constrain the action with ",(0,c.jsx)(t.code,{children:".given([...invariants])"})]}),"\n",(0,c.jsxs)(t.li,{children:["Then finalize the action behavior with ",(0,c.jsx)(t.code,{children:".emit(handler)"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(t.li,{children:["(Optional) Define a ",(0,c.jsx)(t.code,{children:".snap(snapshot => boolean)"})," function to reduce recomputations"]}),"\n",(0,c.jsxs)(t.li,{children:["Finalize the state machine definition using ",(0,c.jsx)(t.code,{children:".build()"})]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"Example usage:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-ts",children:'const machine = state("machine", myStateSchema)\n  .init(() => ({ count: 0 }))\n  .emits({ Incremented: z.object({ amount: z.number() }) })\n  .patch({\n    Incremented: (event, state) => ({ count: state.count + event.amount })\n  })\n  .on("increment", z.object({ by: z.number() }))\n  .given([{ description: "must be positive", valid: (s, a) => a?.by > 0 }])\n  .emit((action, state) => ({ type: "Incremented", amount: action.by }))\n  .build();\n'})}),"\n",(0,c.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,c.jsx)(t.h3,{id:"s",children:"S"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"S"})," ",(0,c.jsx)(t.em,{children:"extends"})," ",(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/act.src.TypeAlias.Schema",children:(0,c.jsx)(t.code,{children:"Schema"})})]}),"\n",(0,c.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsx)(t.h3,{id:"name",children:"name"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.code,{children:"string"})}),"\n",(0,c.jsx)(t.h3,{id:"state",children:"state"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"ZodType"}),"<",(0,c.jsx)(t.code,{children:"S"}),">"]}),"\n",(0,c.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.a,{href:"/act-root/docs/docs/api/act.src.TypeAlias.StateBuilder",children:(0,c.jsx)(t.code,{children:"StateBuilder"})}),"<",(0,c.jsx)(t.code,{children:"S"}),">"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);