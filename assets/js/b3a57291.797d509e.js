"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5713],{4318:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var r=s(4700);const n={},c=r.createContext(n);function a(e){const t=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(c.Provider,{value:t},e.children)}},6729:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/act.src.TypeAlias.EventRegister","title":"act.src.TypeAlias.EventRegister","description":"Act Framework Documentation v0.0.1","source":"@site/docs/api/act.src.TypeAlias.EventRegister.md","sourceDirName":"api","slug":"/api/act.src.TypeAlias.EventRegister","permalink":"/docs/api/act.src.TypeAlias.EventRegister","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/act.src.TypeAlias.EventRegister.md","tags":[],"version":"current","frontMatter":{}}');var n=s(7968),c=s(4318);const a={},i=void 0,o={},d=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"E",id:"e",level:3}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/api/",children:(0,n.jsx)(t.strong,{children:"Act Framework Documentation v0.0.1"})})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/api/",children:"Act Framework Documentation"})," / ",(0,n.jsx)(t.a,{href:"/docs/api/act.src",children:"act/src"})," / EventRegister"]}),"\n",(0,n.jsx)(t.h1,{id:"type-alias-eventregistere",children:"Type Alias: EventRegister<E>"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"EventRegister"}),"<",(0,n.jsx)(t.code,{children:"E"}),"> = ",(0,n.jsx)(t.code,{children:"{ [K in keyof E]: { schema: ZodType<E[K]>; reactions: Map<string, Reaction<E, K>> } }"})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defined in: ",(0,n.jsx)(t.a,{href:"https://github.com/Rotorsoft/act-root/blob/e73e6288fc64fc771d62b165a7ebea9457327b5b/libs/act/src/types/registry.ts#L5",children:"libs/act/src/types/registry.ts:5"})]}),"\n",(0,n.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,n.jsx)(t.h3,{id:"e",children:"E"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"E"})," ",(0,n.jsx)(t.em,{children:"extends"})," ",(0,n.jsx)(t.a,{href:"/docs/api/act.src.TypeAlias.Schemas",children:(0,n.jsx)(t.code,{children:"Schemas"})})]})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);