"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["4691"],{1967:function(e,t,s){s.r(t),s.d(t,{frontMatter:()=>n,default:()=>h,toc:()=>c,metadata:()=>a,assets:()=>i,contentTitle:()=>r});var a=JSON.parse('{"id":"examples/calculator","title":"Calculator Example","description":"This example demonstrates a simple calculator implemented using the Act Framework. It showcases how to define state machines, actions, and events for basic arithmetic operations, and how to compose workflows using event-driven design.","source":"@site/docs/examples/calculator.md","sourceDirName":"examples","slug":"/examples/calculator","permalink":"/act-root/docs/examples/calculator","draft":false,"unlisted":false,"editUrl":"https://github.com/rotorsoft/act-root/edit/master/docs/docs/examples/calculator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Builders & Adapters","permalink":"/act-root/docs/concepts/configuration"},"next":{"title":"WolfDesk Example","permalink":"/act-root/docs/examples/wolfdesk"}}'),o=s(4381),l=s(1261);let n={},r="Calculator Example",i={},c=[{value:"What You&#39;ll Learn",id:"what-youll-learn",level:2},{value:"Source Files",id:"source-files",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Usage",id:"usage",level:2}];function d(e){let t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"calculator-example",children:"Calculator Example"})}),"\n",(0,o.jsx)(t.p,{children:"This example demonstrates a simple calculator implemented using the Act Framework. It showcases how to define state machines, actions, and events for basic arithmetic operations, and how to compose workflows using event-driven design."}),"\n",(0,o.jsx)(t.h2,{id:"what-youll-learn",children:"What You'll Learn"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"How to define a state machine for a calculator"}),"\n",(0,o.jsx)(t.li,{children:"How to model actions (key presses) and events (state changes)"}),"\n",(0,o.jsx)(t.li,{children:"How to use reactions to build workflows"}),"\n",(0,o.jsx)(t.li,{children:"How to test and run the example"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"source-files",children:"Source Files"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/rotorsoft/act-root/blob/master/packages/calculator/src/calculator.ts",children:"calculator.ts"}),": Calculator state machine and logic"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/rotorsoft/act-root/blob/master/packages/calculator/src/main.ts",children:"main.ts"}),": Example usage and entry point"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/rotorsoft/act-root/blob/master/packages/calculator/src/index.ts",children:"index.ts"}),": Module entry"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"The calculator state machine models the left/right operands, operator, and result."}),"\n",(0,o.jsx)(t.li,{children:"Actions represent key presses (digits, operators, dot, equals, clear)."}),"\n",(0,o.jsx)(t.li,{children:"Events are emitted for each key press and drive state transitions."}),"\n",(0,o.jsx)(t.li,{children:"The main example demonstrates pressing keys, updating state, and reacting to events."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.p,{children:"See the source files above for implementation details and usage examples."})]})}function h(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1261:function(e,t,s){s.d(t,{Z:()=>r,a:()=>n});var a=s(3749);let o={},l=a.createContext(o);function n(e){let t=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);